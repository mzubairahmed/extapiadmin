<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:web-services="http://www.springframework.org/schema/web-services"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

		<mvc:annotation-driven/>
		<web-services:annotation-driven/>
		<context:component-scan base-package="com.asi"></context:component-scan>
		
		<cache:annotation-driven />
		
	    <bean id="productServiceClient" class="com.asi.service.product.client.ProductClient" />
	    
		<bean id="migrateService" class="com.asi.admin.service.impl.MigrateProductServiceImpl">
			<property name="restTemplate" ref="restTemplate" />
			<property name="productSearchURL" value="${ws.api.source.productsearch}" />
			<property name="pageSize" value="${ws.api.source.productsearch.pagesize}" />
		</bean>
		
		<bean id="copyService" class="com.asi.admin.service.impl.CopyServiceImpl">
			<property name="restTemplate" ref="restTemplate" />
			<property name="sourceEndpoint" value="${ws.api.ext.source.environment}" />
			<property name="destinationEndpoint" value="${ws.api.ext.destination.environment}" />
			<property name="from" value="${ws.api.ext.mail.from}" />
			<property name="replyTo" value="${ws.api.ext.mail.replyTo}" />
		</bean>
			
		<bean id="loginCopyService" class="com.asi.admin.service.impl.LoginCopyServiceImpl">
			<property name="restTemplate" ref="restTemplate" />
			<property name="sourceLoginEndpoint" value="${ws.api.radar.login.source}" />
			<property name="destinationLoginEndpoint" value="${ws.api.radar.login.destination}" />
		</bean>
		
		<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml"/> 
		<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/> 	
		<context:property-placeholder  location="classpath:copy-environments.properties, classpath:admin-environment.properties" order="1"/>

 			 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
			    <property name="mediaTypes">
			        <map>
			            <entry key="xml" value="application/xml"/>
			            <entry key="html" value="text/html"/>
			            <entry key="json" value="application/json"/>
			        </map>
			    </property>
			    <property name="viewResolvers">
			        <list>
			            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
			            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			                <property name="prefix" value="/"/>
			                <property name="suffix" value=".jsp"/>
			            </bean>
			        </list>
			    </property>
			    <property name="defaultViews">
			        <list>
			            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			        </list>
			    </property>
			</bean>
			<mvc:resources mapping="/css/**" location="/css/" />
			<mvc:resources mapping="/js/**" location="/js/" />
			<mvc:resources mapping="/img/**" location="/img/" />
	
	   	<!-- To enable @RequestMapping process on type level and method level -->
	    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	        <property name="messageConverters">
	            <list>
	                  <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		                   <property name="supportedMediaTypes">
		                  <list>
	                        <bean class="org.springframework.http.MediaType">
	                           <constructor-arg value="application" />
	                           <constructor-arg value="json" />
	                           <constructor-arg value="#{T(java.nio.charset.Charset).forName('UTF-8')}"/>
	                         </bean>
	                         </list>
	                         </property>
	                  </bean> 
	                 <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/> 
	                  <bean class="org.springframework.http.converter.StringHttpMessageConverter ">
	                  	<constructor-arg value="#{T(java.nio.charset.Charset).forName('UTF-8')}"/>
	                  </bean> 
	            </list>
	        </property>
	    </bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>error</value>
		</property>
	</bean>
	
	 <!-- Spring Java Mail Bean definition -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${asi.central.smtp.host}"/>
        <property name="port" value="${asi.central.smtp.port}"/>
        <property name="username" value="${asi.central.smtp.username}"/>
        <property name="password" value="${asi.central.smtp.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.ssl.enable">${asi.central.smtp.enablessl}</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
	
</beans>
